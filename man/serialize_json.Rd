% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serialize.R
\name{serialize_json}
\alias{serialize_json}
\title{Serialize data to JSON}
\usage{
serialize_json(data, structure, pretty = FALSE)
}
\arguments{
\item{data}{The data to serialize}

\item{structure}{The structure to use for serialization}

\item{pretty}{Whether to pretty-print the JSON}
}
\value{
A JSON string
}
\description{
This function serializes R data to JSON format using a specified structure.
The main purpose is to provide a type-safe way to convert R objects into JSON strings
that conform to a predefined structure.

Since R is an array language, many typical serialization tasks can make
interoperability with other languages difficult. It is not uncommon for
an API to expect a scalar value, but R will serialize it as a length-1 vector.

This function is designed to handle such cases by providing a structure
that defines the expected types and formats of the data. The structure is
defined using the \code{build_structure} function, which allows you to specify
the types of each field in the data. The function will then serialize the
data according to this structure, ensuring that the output is in the correct
format.
}
\examples{
# Example usage
data <- list(name = "Test", value = 123L, active = TRUE)
structure <- build_structure(s_map(
  name = s_string(),
  value = s_integer(),
  active = s_logical()
))
json_string <- serialize_json(data, structure)
print(json_string)
}
